employee table

+--------------+
|   employee   |
+==============+
| employee_id  |
+--------------+
| more rows... |
+--------------+


Then you may have a separate table to track seniority level changes with start and end dates, 
whereby end_date = null means the employee is currently in that seniority level.

+--------------+
| level_events |
+==============+
| event_id     |
+--------------+
| employee_id  |
+--------------+
| level_id     |
+--------------+
| start_date   |
+--------------+
| end_date     |
+--------------+

You need a table to correlate seniority level with leave rates.

+-------------+
| level_rates |
+=============+
| level_id    |
+-------------+
| rate        |
+-------------+

Basically, you need something like the following pseudocode:

SELECT * FROM level_events INNER JOIN level_rates ON level_id
WHERE employee_id = <the employee in question>

var months = 0
var leave = 0
var month_interval = 30 * 24 * 60 * 60  // days * hours * minutes * seconds

for Row in Results
  if (end_date == null)
    end_date = NOW()
  date_diff = end_date - start_date
  months = date_diff / month_interval
  leave += months * rate

return leave
Of course, you would also want a table like "leave_used" to track used leave and subtract it from the leave accrued.
